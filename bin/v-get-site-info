#!/bin/bash
# info: get site info
# options: DOMAIN [SUBDIR]
#
# example: v-get-site-info example.com
#
# provides the following info:
#
# SITE_USER=user
# SITE_DIR=/home/user/web/example.com/public_html
# SITE_SUBDIR=
# SITE_TYPE=wordpress
# SITE_HAS_SSL=yes
# SITE_HAS_SSL_HSTS=yes
# SITE_HAS_SSL_FORCE=yes
# SITE_IP=127.0.0.1
# SITE_BACKEND=PHP-8_2
# SITE_TEMPLATE=wordpress
# SITE_PROXY_TEMPLATE=
# SITE_PROXY_EXTENSION=
# FPM_VERSION=8.2
# CONFIG_FILE=wp-config.php
# CONFIG_FILE_FULL_PATH=/home/user/web/example.com/public_html/wp-config.php
# DB_EXISTS=yes
# DB_TYPE=mysql
# DB_CHARSET=UTF8MB4
# DB_HOST=localhost
# DB_NAME=user_dbname
# DB_USER=user_dbuser
# DB_PASS=passW0rd
# DB_NAME_WITHOUT_PREFIX='dbname'
# DB_USER_WITHOUT_PREFIX='dbuser'

#----------------------------------------------------------#
#                Variables & Functions                     #
#----------------------------------------------------------#

whoami=$(whoami)
if [ "$whoami" != "root" ]; then
	echo "You must be root to execute this script"
	exit 1
fi

# Argument definition
DOMAIN=$1

SUBDIR=''
if [ $# -gt 1 ]; then
	SUBDIR=$2
fi

# Importing system environment
source /etc/profile

# Includes
# shellcheck source=/etc/hestiacp/hestia.conf
source /etc/hestiacp/hestia.conf
# shellcheck source=/usr/local/hestia/func/main.sh
source $HESTIA/func/main.sh
# shellcheck source=/usr/local/hestia/func/db.sh
source $HESTIA/func/db.sh

# hudok cleanup
# Get database name / username without prefix
delete_database_prefix() {
	user=$1
	db=$2
	user_len=${#user}
	user_len=$((user_len+1))
	echo ${db:user_len}
}

#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '1' "$#" 'DOMAIN [SUBDIR]'
is_domain_format_valid "$DOMAIN"

USER=$($HESTIA/bin/v-search-domain-owner "$DOMAIN")
if [ -z "$USER" ]; then
	echo "Error: domain $DOMAIN does not exist"
	exit 2
fi

#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

domain_info=$($HESTIA/bin/v-list-web-domain "$USER" "$DOMAIN")

PUBLIC_HTML='public_html';
CHECK_PUBLIC_SHTML=$(echo "$domain_info" | grep 'SSL:' | grep -c 'single')

if [ $CHECK_PUBLIC_SHTML -eq 1 ]; then
	PUBLIC_HTML='public_shtml';
fi
SITE_DIR="/home/$USER/web/$DOMAIN/$PUBLIC_HTML"

if [ -n "$SUBDIR" ]; then
	SITE_DIR="${SITE_DIR}/${SUBDIR}"
fi

SITE_TYPE=''

if [ -f "$SITE_DIR/wp-config.php" ]; then
	SITE_TYPE='wordpress'
	CONFIG_FILE="wp-config.php"
	CONFIG_FILE_FULL_PATH="$SITE_DIR/$CONFIG_FILE"
fi

if [ -f "$SITE_DIR/configuration.php" ]; then
	SITE_TYPE='joomla'
	CONFIG_FILE="configuration.php"
	CONFIG_FILE_FULL_PATH="$SITE_DIR/$CONFIG_FILE"
fi

if [ -f "$SITE_DIR/system/engine/model.php" ]; then
	check_grep=$(grep -c 'OpenCart' $SITE_DIR/system/engine/model.php)
	if [ "$check_grep" -gt 0 ]; then
		SITE_TYPE='opencart'
		CONFIG_FILE="$PUBLIC_HTML/config.php"
		SUBDIR='..'
		SITE_DIR="${SITE_DIR}/.."
		CONFIG_FILE_FULL_PATH="$SITE_DIR/$CONFIG_FILE"
	fi
fi

# Fallback to static site if SITE_TYPE is not set
if [ -z "$SITE_TYPE" ]; then
	SITE_TYPE='static'
fi

if [ "$SITE_TYPE" = "wordpress" ]; then
	CONFIG_FILE_FULL_PATH_BACKUP="${CONFIG_FILE_FULL_PATH}_backup"
	cp $CONFIG_FILE_FULL_PATH $CONFIG_FILE_FULL_PATH_BACKUP
	sed -i "s|//.*$||g" $CONFIG_FILE_FULL_PATH_BACKUP
	sed -i "s|\"|'|g" $CONFIG_FILE_FULL_PATH_BACKUP
	sed -i "s|('|( '|g" $CONFIG_FILE_FULL_PATH_BACKUP
	sed -i "s|');|' );|g" $CONFIG_FILE_FULL_PATH_BACKUP
	DB_NAME=$(grep 'DB_NAME' $CONFIG_FILE_FULL_PATH_BACKUP | awk '{print $3}' | sed -e "s/^'//" -e "s/'$//")
	DB_USER=$(grep 'DB_USER' $CONFIG_FILE_FULL_PATH_BACKUP | awk '{print $3}' | sed -e "s/^'//" -e "s/'$//")
	DB_PASS=$(grep 'DB_PASSWORD' $CONFIG_FILE_FULL_PATH_BACKUP | awk '{print $3}' | sed -e "s/^'//" -e "s/'$//")
	DB_HOST=$(grep 'DB_HOST' $CONFIG_FILE_FULL_PATH_BACKUP | awk '{print $3}' | sed -e "s/^'//" -e "s/'$//")
	rm $CONFIG_FILE_FULL_PATH_BACKUP
fi

if [ "$SITE_TYPE" = "joomla" ]; then
	CONFIG_FILE_FULL_PATH_BACKUP="${CONFIG_FILE_FULL_PATH}_backup"
	cp $CONFIG_FILE_FULL_PATH $CONFIG_FILE_FULL_PATH_BACKUP
	sed -i "s|//.*$||g" $CONFIG_FILE_FULL_PATH_BACKUP
	sed -i "s|='|= '|g" $CONFIG_FILE_FULL_PATH_BACKUP
	sed -i "s|= '| = '|g" $CONFIG_FILE_FULL_PATH_BACKUP
	sed -i "s|  =| =|g" $CONFIG_FILE_FULL_PATH_BACKUP
	sed -i "s|';$|'|g" $CONFIG_FILE_FULL_PATH_BACKUP
	DB_NAME=$(grep 'public $db ' $CONFIG_FILE_FULL_PATH_BACKUP | awk '{print $4}' | sed -e "s/^'//" -e "s/'$//")
	DB_USER=$(grep 'public $user ' $CONFIG_FILE_FULL_PATH_BACKUP | awk '{print $4}' | sed -e "s/^'//" -e "s/'$//")
	DB_PASS=$(grep 'public $password ' $CONFIG_FILE_FULL_PATH_BACKUP | awk '{print $4}' | sed -e "s/^'//" -e "s/'$//")
	DB_HOST=$(grep 'public $host ' $CONFIG_FILE_FULL_PATH_BACKUP | awk '{print $4}' | sed -e "s/^'//" -e "s/'$//")
	rm $CONFIG_FILE_FULL_PATH_BACKUP
fi

if [ "$SITE_TYPE" = "opencart" ]; then
	CONFIG_FILE_FULL_PATH_BACKUP="${CONFIG_FILE_FULL_PATH}_backup"
	cp $CONFIG_FILE_FULL_PATH $CONFIG_FILE_FULL_PATH_BACKUP
	sed -i "s|//.*$||g" $CONFIG_FILE_FULL_PATH_BACKUP
	sed -i "s|('|( '|g" $CONFIG_FILE_FULL_PATH_BACKUP
	sed -i "s|');|' );|g" $CONFIG_FILE_FULL_PATH_BACKUP
	DB_NAME=$(grep 'DB_DATABASE' $CONFIG_FILE_FULL_PATH_BACKUP | awk '{print $3}' | sed -e "s/^'//" -e "s/'$//")
	DB_USER=$(grep 'DB_USERNAME' $CONFIG_FILE_FULL_PATH_BACKUP | awk '{print $3}' | sed -e "s/^'//" -e "s/'$//")
	DB_PASS=$(grep 'DB_PASSWORD' $CONFIG_FILE_FULL_PATH_BACKUP | awk '{print $3}' | sed -e "s/^'//" -e "s/'$//")
	DB_HOST=$(grep 'DB_HOST' $CONFIG_FILE_FULL_PATH_BACKUP | awk '{print $3}' | sed -e "s/^'//" -e "s/'$//")
	rm $CONFIG_FILE_FULL_PATH_BACKUP
fi

DB_TYPE=$($HESTIA/bin/v-list-database "$USER" "$DB_NAME" | grep 'TYPE' | awk '{print $2}')

DB_CHARSET=$($HESTIA/bin/v-list-database "$USER" "$DB_NAME" | grep 'CHARSET' | awk '{print tolower($2)}')

# Really check if DB exists
# Sometimes users do strange things...
# TODO: find similar solution for 'postgresql"
DB_EXISTS='no'
if [ "$DB_TYPE" = "mysql" ]; then
	DB_exists=$(mysqlshow | grep -ow "$DB_NAME")
	if [ "$DB_exists" = "$DB_NAME" ]; then
		DB_EXISTS='yes'
	fi
fi

SITE_IP=$(echo "$domain_info" | grep 'IP:' | awk '{print $2}')
SITE_BACKEND=$(echo "$domain_info" | grep 'BACKEND:' | awk '{print $2}')
SITE_TEMPLATE=$(echo "$domain_info" | grep 'TEMPLATE:' | awk '{print $2}')
SITE_PROXY_TEMPLATE=$(echo "$domain_info" | grep 'PROXY:' | awk '{print $2}')
SITE_PROXY_EXTENSION=$(echo "$domain_info" | grep 'PROXY EXT:' | cut -d ' ' -f8- | sed "s# #,#g")

SITE_HAS_SSL='no'
if [ -f "/home/$USER/conf/web/$DOMAIN/ssl/$DOMAIN.ca" ]; then
	SITE_HAS_SSL='yes'
fi

SITE_HAS_SSL_HSTS=$(echo "$domain_info" | grep 'SSL_HSTS:' | awk '{print $2}')
SITE_HAS_SSL_FORCE=$(echo "$domain_info" | grep 'SSL_FORCE:' | awk '{print $2}')

if [ -n "$DB_NAME" ]; then
	DB_NAME_WITHOUT_PREFIX=$(delete_database_prefix "$USER" "$DB_NAME")
fi

if [ -n "$DB_USER" ]; then
	DB_USER_WITHOUT_PREFIX=$(delete_database_prefix "$USER" "$DB_USER")
fi

# hudok cleanup
# can't find hestia equivalent. yet...
# need to test further with apache + nginx on a clean version
FPM_VERSION=""
if [[ $SITE_BACKEND == "PHP-"* ]]; then
	FPM_VERSION="${SITE_BACKEND:4:1}.${SITE_BACKEND:6:1}"
fi

echo "SITE_USER=$USER"
echo "SITE_DIR=$SITE_DIR"
echo "SITE_SUBDIR=$SUBDIR"
echo "SITE_TYPE=$SITE_TYPE"
echo "SITE_HAS_SSL=$SITE_HAS_SSL"
echo "SITE_HAS_SSL_HSTS=$SITE_HAS_SSL_HSTS"
echo "SITE_HAS_SSL_FORCE=$SITE_HAS_SSL_FORCE"
echo "SITE_IP=$SITE_IP"
echo "SITE_BACKEND=$SITE_BACKEND"
echo "SITE_TEMPLATE=$SITE_TEMPLATE"
echo "SITE_PROXY_TEMPLATE=$SITE_PROXY_TEMPLATE"
echo "SITE_PROXY_EXTENSION=$SITE_PROXY_EXTENSION"
echo "FPM_VERSION=$FPM_VERSION"
echo "CONFIG_FILE=$CONFIG_FILE"
echo "CONFIG_FILE_FULL_PATH=$CONFIG_FILE_FULL_PATH"
echo "DB_EXISTS=$DB_EXISTS"
echo "DB_TYPE=$DB_TYPE"
echo "DB_CHARSET=$DB_CHARSET"
echo "DB_HOST=$DB_HOST"
echo "DB_NAME=$DB_NAME"
echo "DB_USER=$DB_USER"
echo "DB_PASS=$DB_PASS"
echo "DB_NAME_WITHOUT_PREFIX=$DB_NAME_WITHOUT_PREFIX"
echo "DB_USER_WITHOUT_PREFIX=$DB_USER_WITHOUT_PREFIX"

#----------------------------------------------------------#
#                       Hestia                             #
#----------------------------------------------------------#

# Logging
log_event "$OK" "$ARGUMENTS"

exit

