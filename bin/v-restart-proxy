#!/bin/bash
# info: restart proxy server
# options: NONE
#
# example: v-restart-proxy [RESTART]
#
# This function reloads proxy server configuration.
#
# code used in:
#
# bin/v-add-domain
# bin/v-add-letsencrypt-domain
# bin/v-add-mail-domain
# bin/v-add-mail-domain-ssl
# bin/v-add-mail-domain-webmail
# bin/v-add-sys-ip
# bin/v-add-web-domain
# bin/v-add-web-domain-alias
# bin/v-add-web-domain-httpauth
# bin/v-add-web-domain-proxy
# bin/v-add-web-domain-redirect
# bin/v-add-web-domain-ssl
# bin/v-add-web-domain-ssl-force
# bin/v-add-web-domain-ssl-hsts
# bin/v-change-sys-demo-mode
# bin/v-change-sys-php
# bin/v-change-sys-webmail
# bin/v-change-web-domain-ip
# bin/v-change-web-domain-proxy-tpl
# bin/v-change-web-domain-sslcert
# bin/v-delete-domain
# bin/v-delete-mail-domain-webmail
# bin/v-delete-sys-ip
# bin/v-delete-web-domain
# bin/v-delete-web-domain-alias
# bin/v-delete-web-domain-httpauth
# bin/v-delete-web-domain-proxy
# bin/v-delete-web-domain-redirect
# bin/v-delete-web-domains
# bin/v-delete-web-domain-ssl
# bin/v-delete-web-domain-ssl-force
# bin/v-delete-web-domain-ssl-hsts
# bin/v-purge-nginx-cache
# bin/v-rebuild-web-domain
# bin/v-rebuild-web-domains
# bin/v-restore-user
# bin/v-suspend-domain
# bin/v-suspend-user
# bin/v-suspend-web-domain
# bin/v-suspend-web-domains
# bin/v-unsuspend-domain
# bin/v-unsuspend-user
# bin/v-unsuspend-web-domain
# bin/v-unsuspend-web-domains
# bin/v-update-letsencrypt-ssl
# bin/v-update-mail-domain-ssl
# bin/v-update-mail-templates
# bin/v-update-sys-ip
# bin/v-update-web-domain-ssl
# bin/v-update-web-templates
# func/upgrade.sh
# test/test.bats
# web/bulk/web/index.php
# web/edit/web/index.php

#----------------------------------------------------------#
#                Variables & Functions                     #
#----------------------------------------------------------#

# Includes
# shellcheck source=/etc/hestiacp/hestia.conf
source /etc/hestiacp/hestia.conf
# shellcheck source=/usr/local/hestia/func/main.sh
source $HESTIA/func/main.sh
# load config file
source_conf "$HESTIA/conf/hestia.conf"

date=$(date +"%Y-%m-%d %H:%M:%S")

send_email_report() {
	email=$(grep CONTACT "$HESTIA/data/users/$ROOT_USER/user.conf")
	email=$(echo "$email" | cut -f 2 -d "'")
	tmpfile=$(mktemp)
	subj="$(hostname): $PROXY_SYSTEM restart failed"
	nginx -t >> $tmpfile 2>&1

	if [ "$1" == "DO_RESTART" ]; then
		service "$PROXY_SYSTEM" restart >> $tmpfile 2>&1
	fi
	cat "$tmpfile" | $SENDMAIL -s "$subj" "$email"
	if [ "$DEBUG_MODE" = "true" ]; then
		echo "[ $date | $PROXY_SYSTEM | PROXY ]" >> /var/log/hestia/debug.log 2>&1
		cat "$tmpfile" >> /var/log/hestia/debug.log 2>&1
	fi
	rm -f $tmpfile
}

#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Exit
if [ -z "$PROXY_SYSTEM" ] || [ "$PROXY_SYSTEM" = 'remote' ]; then
	exit
fi

if [ "$1" = "no" ]; then
	exit
fi

# Schedule restart
if [ "$1" = 'scheduled' ] || [ -z "$1" ] && [ "$SCHEDULED_RESTART" = 'yes' ]; then
	sed -i "/\/$SCRIPT now/d" $HESTIA/data/queue/restart.pipe
	echo "$BIN/$SCRIPT now" >> $HESTIA/data/queue/restart.pipe
	exit
fi

if [ "$1" = "updatessl" ]; then
	sed -i "/\/$SCRIPT ssl/d" $HESTIA/data/queue/restart.pipe
	echo "$BIN/$SCRIPT ssl" >> $HESTIA/data/queue/restart.pipe
	exit
fi

if [ -f "$HESTIA/web/inc/nginx_proxy" ]; then
	# if hestia is behind default nginx, restart in background with 15 sec delay
	# background restart
	if [ "$1" = 'background' ]; then
		# Restart system
		sleep 15

		# Preform a check if Nginx is valid as reload doesn't throw an error / exit
		if [ "$DEBUG_MODE" = "true" ]; then
			echo "[ $date | $PROXY_SYSTEM ]" >> /var/log/hestia/debug.log 2>&1
			service $PROXY_SYSTEM configtest >> /var/log/hestia/debug.log 2>&1
		else
			service $PROXY_SYSTEM configtest > /dev/null 2>&1
		fi
		if [ $? -ne 0 ]; then
			send_email_report
			check_result "$E_RESTART" "$PROXY_SYSTEM restart failed"
		fi

		$BIN/v-restart-service $PROXY_SYSTEM > /dev/null 2>&1

		# Update restart queue
		if [ -e "$HESTIA/data/queue/restart.pipe" ]; then
			sed -i "/$SCRIPT/d" $HESTIA/data/queue/restart.pipe
		fi

		exit
	fi
	# Send to background process
	nohup $BIN/v-restart-proxy 'background' &> /dev/null &
else
	# Default behaviour

	# Preform a check if Nginx is valid as reload doesn't throw an error / exit
	if [ "$DEBUG_MODE" = "true" ]; then
		echo "[ $date | $PROXY_SYSTEM ]" >> /var/log/hestia/debug.log 2>&1
		service $PROXY_SYSTEM configtest >> /var/log/hestia/debug.log 2>&1
	else
		service $PROXY_SYSTEM configtest > /dev/null 2>&1
	fi
	if [ $? -ne 0 ]; then
		send_email_report
		check_result "$E_RESTART" "$PROXY_SYSTEM restart failed"
	fi

	# Restart system
	if [ "$1" = "ssl" ]; then
		restart="ssl"
	fi
	$BIN/v-restart-service "$PROXY_SYSTEM" "$restart" > /dev/null 2>&1
	if [ $? -ne 0 ]; then
		send_email_report "DO_RESTART"
		check_result "$E_RESTART" "$PROXY_SYSTEM restart failed"
	fi

	# Update restart queue
	if [ -e "$HESTIA/data/queue/restart.pipe" ]; then
		sed -i "/\/$SCRIPT now/d" $HESTIA/data/queue/restart.pipe
		sed -i "/\/$SCRIPT ssl/d" $HESTIA/data/queue/restart.pipe
	fi
fi

#----------------------------------------------------------#
#                       Hestia                             #
#----------------------------------------------------------#

exit
